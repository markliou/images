{
  "ERC721Metadata": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "_name",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "_symbol",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_tokenId",
            "type": "uint256"
          }
        ],
        "name": "tokenURI",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Optional metadata extension for ERC-721 non-fungible token standard. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
      "methods": {
        "name()": {
          "details": "Returns a descriptive name for a collection of NFTs in this contract.",
          "return": "Representing name. "
        },
        "symbol()": {
          "details": "Returns a abbreviated name for a collection of NFTs in this contract.",
          "return": "Representing symbol. "
        },
        "tokenURI(uint256)": {
          "details": "Returns a distinct Uniform Resource Identifier (URI) for a given asset. It Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC3986. The URI may point to a JSON file that conforms to the \"ERC721 Metadata JSON Schema\".",
          "return": "URI of _tokenId."
        }
      }
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "name()": "06fdde03",
        "symbol()": "95d89b41",
        "tokenURI(uint256)": "c87b56dd"
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.5.6+commit.b259423e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "name": "_name",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "name": "_symbol",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_tokenId",
                "type": "uint256"
              }
            ],
            "name": "tokenURI",
            "outputs": [
              {
                "name": "",
                "type": "string"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "devdoc": {
          "details": "Optional metadata extension for ERC-721 non-fungible token standard. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
          "methods": {
            "name()": {
              "details": "Returns a descriptive name for a collection of NFTs in this contract.",
              "return": "Representing name. "
            },
            "symbol()": {
              "details": "Returns a abbreviated name for a collection of NFTs in this contract.",
              "return": "Representing symbol. "
            },
            "tokenURI(uint256)": {
              "details": "Returns a distinct Uniform Resource Identifier (URI) for a given asset. It Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC3986. The URI may point to a JSON file that conforms to the \"ERC721 Metadata JSON Schema\".",
              "return": "URI of _tokenId."
            }
          }
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "./src/contracts/tokens/erc721-metadata.sol": "ERC721Metadata"
        },
        "evmVersion": "byzantium",
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "./src/contracts/tokens/erc721-metadata.sol": {
          "keccak256": "0x69bf538fbcff5b21f3d3c3bb6e3f5d8bab97009e755b1dc5229e9d4a743cb08c",
          "urls": [
            "bzzr://65d3975a46a5c58a516b88982bca7d27dee9b253ab3a39744302bfbf54d0f362"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  }
}