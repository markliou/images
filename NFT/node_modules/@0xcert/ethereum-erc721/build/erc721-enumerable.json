{
  "ERC721Enumerable": {
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_owner",
            "type": "address"
          },
          {
            "name": "_index",
            "type": "uint256"
          }
        ],
        "name": "tokenOfOwnerByIndex",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "_index",
            "type": "uint256"
          }
        ],
        "name": "tokenByIndex",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Optional enumeration extension for ERC-721 non-fungible token standard. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
      "methods": {
        "tokenByIndex(uint256)": {
          "details": "Returns the token identifier for the `_index`th NFT. Sort order is not specified.",
          "params": {
            "_index": "A counter less than `totalSupply()`."
          },
          "return": "Token id."
        },
        "tokenOfOwnerByIndex(address,uint256)": {
          "details": "Returns the token identifier for the `_index`th NFT assigned to `_owner`. Sort order is not specified. It throws if `_index` >= `balanceOf(_owner)` or if `_owner` is the zero address, representing invalid NFTs.",
          "params": {
            "_index": "A counter less than `balanceOf(_owner)`.",
            "_owner": "An address where we are interested in NFTs owned by them."
          },
          "return": "Token id."
        },
        "totalSupply()": {
          "details": "Returns a count of valid NFTs tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address.",
          "return": "Total supply of NFTs."
        }
      }
    },
    "evm": {
      "assembly": "",
      "bytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "deployedBytecode": {
        "linkReferences": {},
        "object": "",
        "opcodes": "",
        "sourceMap": ""
      },
      "gasEstimates": null,
      "legacyAssembly": null,
      "methodIdentifiers": {
        "tokenByIndex(uint256)": "4f6ccce7",
        "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
        "totalSupply()": "18160ddd"
      }
    },
    "metadata": {
      "compiler": {
        "version": "0.5.6+commit.b259423e"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_owner",
                "type": "address"
              },
              {
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenOfOwnerByIndex",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          },
          {
            "constant": true,
            "inputs": [
              {
                "name": "_index",
                "type": "uint256"
              }
            ],
            "name": "tokenByIndex",
            "outputs": [
              {
                "name": "",
                "type": "uint256"
              }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "devdoc": {
          "details": "Optional enumeration extension for ERC-721 non-fungible token standard. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-721.md.",
          "methods": {
            "tokenByIndex(uint256)": {
              "details": "Returns the token identifier for the `_index`th NFT. Sort order is not specified.",
              "params": {
                "_index": "A counter less than `totalSupply()`."
              },
              "return": "Token id."
            },
            "tokenOfOwnerByIndex(address,uint256)": {
              "details": "Returns the token identifier for the `_index`th NFT assigned to `_owner`. Sort order is not specified. It throws if `_index` >= `balanceOf(_owner)` or if `_owner` is the zero address, representing invalid NFTs.",
              "params": {
                "_index": "A counter less than `balanceOf(_owner)`.",
                "_owner": "An address where we are interested in NFTs owned by them."
              },
              "return": "Token id."
            },
            "totalSupply()": {
              "details": "Returns a count of valid NFTs tracked by this contract, where each one of them has an assigned and queryable owner not equal to the zero address.",
              "return": "Total supply of NFTs."
            }
          }
        },
        "userdoc": {
          "methods": {}
        }
      },
      "settings": {
        "compilationTarget": {
          "./src/contracts/tokens/erc721-enumerable.sol": "ERC721Enumerable"
        },
        "evmVersion": "byzantium",
        "libraries": {},
        "optimizer": {
          "enabled": false,
          "runs": 200
        },
        "remappings": []
      },
      "sources": {
        "./src/contracts/tokens/erc721-enumerable.sol": {
          "keccak256": "0x1495010755e8f26c00cb28e8b5376fc26854bc5b6b7d73e05af31efa0c1141d3",
          "urls": [
            "bzzr://5a68e0561dc990ecc7f60d3babb57c7fb23ec9afdb54a7e3e5fffb00558008a5"
          ]
        }
      },
      "version": 1
    },
    "userdoc": {
      "methods": {}
    }
  }
}